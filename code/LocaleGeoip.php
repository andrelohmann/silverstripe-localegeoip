<?php

/**
 * LocaleGeoip
 * 
 * extends the Geoip to extract the Locale from CountryCode
 */
class LocaleGeoip extends Geoip {
    
    private static $default_locale_code = 'en_US';
    
    private static $available_languages = array(
        'en_US' => 'ENGLISH',
        'de_DE' => 'GERMAN',
        'it_IT' => 'ITALIAN',
        'es_ES' => 'SPANISH',
        'fr_FR' => 'FRENCH',
        'da_DK' => 'DANISH',
        'nl_NL' => 'DUTCH',
        'tr_TR' => 'TURKISH',
        'pl_PL' => 'POLISH',
        'pt_PT' => 'PORTUGUESE',
        'hu_HU' => 'HUNGARIAN',
        'sl_SI' => 'SLOVENIAN',
        'sv_SE' => 'SWEDISH',
        'fi_FI' => 'FINNISH',
        'ru_RU' => 'RUSSIAN'
    );
    
    private static $supported_locales = array(
        'en' => 'en_US',
        'de' => 'de_DE',
        'it' => 'it_IT',
        'es' => 'es_ES',
        'fr' => 'fr_FR',
        'da' => 'da_DK',
        'nl' => 'nl_NL',
        'tr' => 'tr_TR',
        'pl' => 'pl_PL',
        'pt' => 'pt_PT',
        'hu' => 'hu_HU',
        'sl' => 'sl_SI',
        'sv' => 'sv_SE',
        'fi' => 'fi_FI',
        'ru' => 'ru_RU'
    );
    
    /**
     * three Letter Code Mapping
     * 
     * http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
     */
    private static $threeletter_locale_code_map = array(
        'deu' => 'de_DE',
        'eng' => 'en_US',
        'spa' => 'es_ES',
        'ita' => 'it_IT',
        'por' => 'pt_PT',
        'dan' => 'da_DK'
    );
    
    // http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
    private static $locale_3l2l_code_map = array(
        'abk' => 'ab',
        'aar' => 'aa',
        'afr' => 'af',
        'aka' => 'ak',
        'sqi' => 'sq',
        'alb' => 'sq',
        'amh' => 'am',
        'ara' => 'ar',
        'arg' => 'an',
        'hye' => 'hy',
        'arm' => 'hy',
        'asm' => 'as',
        'ava' => 'av',
        'ave' => 'ae',
        'aym' => 'ay',
        'aze' => 'az',
        'bam' => 'bm',
        'bak' => 'ba',
        'eus' => 'eu',
        'baq' => 'eu',
        'bel' => 'be',
        'ben' => 'bn',
        'bih' => 'bh',
        'bis' => 'bi',
        'bos' => 'bs',
        'bre' => 'br',
        'bul' => 'bg',
        'mya' => 'my',
        'bur' => 'my',
        'cat' => 'ca',
        'cha' => 'ch',
        'che' => 'ce',
        'nya' => 'ny',
        'zho' => 'zh',
        'chi' => 'zh',
        'chv' => 'cv',
        'cor' => 'kw',
        'cos' => 'co',
        'cre' => 'cr',
        'hrv' => 'hr',
        'ces' => 'cs',
        'cze' => 'cs',
        'dan' => 'da',
        'div' => 'dv',
        'nld' => 'nl',
        'dut' => 'nl',
        'dzo' => 'dz',
        'eng' => 'en',
        'epo' => 'eo',
        'est' => 'et',
        'ewe' => 'ee',
        'fao' => 'fo',
        'fij' => 'fj',
        'fin' => 'fi',
        'fra' => 'fr',
        'fre' => 'fr',
        'ful' => 'ff',
        'glg' => 'gl',
        'kat' => 'ka',
        'geo' => 'ka',
        'deu' => 'de',
        'ger' => 'de',
        'ell' => 'el',
        'gre' => 'el',
        'grn' => 'gn',
        'guj' => 'gu',
        'hat' => 'ht',
        'hau' => 'ha',
        'heb' => 'he',
        'her' => 'hz',
        'hin' => 'hi',
        'hmo' => 'ho',
        'hun' => 'hu',
        'ina' => 'ia',
        'ind' => 'id',
        'ile' => 'ie',
        'gle' => 'ga',
        'ibo' => 'ig',
        'ipk' => 'ik',
        'ido' => 'io',
        'isl' => 'is',
        'ice' => 'is',
        'ita' => 'it',
        'iku' => 'iu',
        'jpn' => 'ja',
        'jav' => 'jv',
        'kal' => 'kl',
        'kan' => 'kn',
        'kau' => 'kr',
        'kas' => 'ks',
        'kaz' => 'kk',
        'khm' => 'km',
        'kik' => 'ki',
        'kin' => 'rw',
        'kir' => 'ky',
        'kom' => 'kv',
        'kon' => 'kg',
        'kor' => 'ko',
        'kur' => 'ku',
        'kua' => 'kj',
        'lat' => 'la',
        'ltz' => 'lb',
        'lug' => 'lg',
        'lim' => 'li',
        'lin' => 'ln',
        'lao' => 'lo',
        'lit' => 'lt',
        'lub' => 'lu',
        'lav' => 'lv',
        'glv' => 'gv',
        'mkd' => 'mk',
        'mac' => 'mk',
        'mlg' => 'mg',
        'msa' => 'ms',
        'may' => 'ms',
        'mal' => 'ml',
        'mlt' => 'mt',
        'mri' => 'mi',
        'mao' => 'mi',
        'mar' => 'mr',
        'mah' => 'mh',
        'mon' => 'mn',
        'nau' => 'na',
        'nav' => 'na',
        'nob' => 'nb',
        'nde' => 'nd',
        'nep' => 'ne',
        'ndo' => 'ng',
        'nno' => 'nn',
        'nor' => 'no',
        'iii' => 'ii',
        'nbl' => 'nr',
        'oci' => 'oc',
        'oji' => 'oj',
        'chu' => 'cu',
        'orm' => 'om',
        'ori' => 'or',
        'oss' => 'os',
        'pan' => 'pa',
        'pli' => 'pi',
        'fas' => 'fa',
        'per' => 'fa',
        'pol' => 'pl',
        'pus' => 'ps',
        'por' => 'pt',
        'que' => 'qu',
        'roh' => 'rm',
        'run' => 'rn',
        'ron' => 'ro',
        'rum' => 'ro',
        'rus' => 'ru',
        'san' => 'sa',
        'srd' => 'sc',
        'snd' => 'sd',
        'sme' => 'se',
        'smo' => 'sm',
        'sag' => 'sg',
        'srp' => 'sr',
        'gla' => 'gd',
        'sna' => 'sn',
        'sin' => 'si',
        'slk' => 'sk',
        'slo' => 'sk',
        'slv' => 'sl',
        'som' => 'so',
        'sot' => 'st',
        'spa' => 'es',
        'sun' => 'su',
        'swa' => 'sw',
        'ssw' => 'ss',
        'swe' => 'sv',
        'tam' => 'ta',
        'tel' => 'te',
        'tgk' => 'tg',
        'tha' => 'th',
        'tir' => 'ti',
        'bod' => 'bo',
        'tib' => 'bo',
        'tuk' => 'tk',
        'tgl' => 'tl',
        'tsn' => 'tn',
        'ton' => 'to',
        'tur' => 'tr',
        'tso' => 'ts',
        'tat' => 'tt',
        'twi' => 'tw',
        'tah' => 'ty',
        'uig' => 'ug',
        'ukr' => 'uk',
        'urd' => 'ur',
        'uzb' => 'uz',
        'ven' => 've',
        'vie' => 'vi',
        'vol' => 'vo',
        'wln' => 'wa',
        'cym' => 'cy',
        'wel' => 'cy',
        'wol' => 'wo',
        'fry' => 'fy',
        'xho' => 'xh',
        'yid' => 'yi',
        'yor' => 'yo',
        'zha' => 'za',
        'zul' => 'zu'
    );
    
    /** 
     * country_code -> local_code map
     * 
     * needs to be altered for more languages
     */
    private static $country_locale_code_map = array(
        'GB' => 'en_GB',
        'DE' => 'de_DE',
        'FR' => 'fr_FR',
        'SE' => 'sv_SE',
        'DK' => 'da_DK',
        'IT' => 'it_IT',
        'ES' => 'es_ES',
        'FI' => 'fi_FI',
        'NL' => 'nl_NL',
        'TR' => 'tr_TR',
        'RU' => 'ru_RU',
        'PT' => 'pt_PT',
        'BR' => 'pt_PT',
        'SI' => 'sl_SI',
        'HU' => 'hu_HU',
        'PL' => 'pl_PL',
        'AD' => 'ca_AD',
        'AE' => 'ar_AE',
	'AF' => 'fa_AF',
        'US' => 'en_US'
        /*
		'AL' => "Albania",
		'AM' => "Armenia",
		'AN' => "Netherlands Antilles",
		'AO' => "Angola",
		'AP' => "Asia/Pacific Region",
		'AQ' => "Antarctica",
		'AR' => "Argentina",
		'AS' => "American Samoa",
		'AT' => "Austria",
		'AU' => "Australia",
		'AW' => "Aruba",
		'AZ' => "Azerbaijan",
		'BA' => "Bosnia and Herzegovina",
		'BB' => "Barbados",
		'BD' => "Bangladesh",
		'BE' => "Belgium",
		'BF' => "Burkina Faso",
		'BG' => "Bulgaria",
		'BH' => "Bahrain",
		'BI' => "Burundi",
		'BJ' => "Benin",
		'BM' => "Bermuda",
		'BN' => "Brunei Darussalam",
		'BO' => "Bolivia",
		'BR' => "Brazil",
		'BS' => "Bahamas",
		'BT' => "Bhutan",
		'BV' => "Bouvet Island",
		'BW' => "Botswana",
		'BY' => "Belarus",
		'BZ' => "Belize",
		'CA' => "Canada",
		'CC' => "Cocos (Keeling) Islands",
		'CF' => "Central African Republic",
		'CG' => "Congo",
		'CH' => "Switzerland",
		'CI' => "Cote D'Ivoire",
		'CK' => "Cook Islands",
		'CL' => "Chile",
		'CM' => "Cameroon",
		'CN' => "China",
		'CO' => "Colombia",
		'CR' => "Costa Rica",
		'CU' => "Cuba",
		'CV' => "Cape Verde",
		'CX' => "Christmas Island",
		'CY' => "Cyprus",
		'CZ' => "Czech Republic",
		'DE' => "Germany",
		'DJ' => "Djibouti",
		'DK' => "Denmark",
		'DM' => "Dominica",
		'DO' => "Dominican Republic",
		'DZ' => "Algeria",
		'EC' => "Ecuador",
		'EE' => "Estonia",
		'EG' => "Egypt",
		'EH' => "Western Sahara",
		'ER' => "Eritrea",
		'ES' => "Spain",
		'ET' => "Ethiopia",
		'EU' => "Europe",
		'FI' => "Finland",
		'FJ' => "Fiji",
		'FK' => "Falkland Islands (Malvinas)",
		'FM' => "Micronesia - Federated States of",
		'FO' => "Faroe Islands",
		'FR' => "France",
		'FX' => "France (Metropolitan)",
		'GA' => "Gabon",
		'GB' => "United Kingdom",
		'GD' => "Grenada",
		'GE' => "Georgia",
		'GF' => "French Guiana",
		'GH' => "Ghana",
		'GI' => "Gibraltar",
		'GL' => "Greenland",
		'GM' => "Gambia",
		'GN' => "Guinea",
		'GP' => "Guadeloupe",
		'GQ' => "Equatorial Guinea",
		'GR' => "Greece",
		'GS' => "South Georgia and the South Sandwich Islands",
		'GT' => "Guatemala",
		'GU' => "Guam",
		'GW' => "Guinea-Bissau",
		'GY' => "Guyana",
		'HK' => "Hong Kong",
		'HM' => "Heard Island and McDonald Islands",
		'HN' => "Honduras",
		'HR' => "Croatia",
		'HT' => "Haiti",
		'HU' => "Hungary",
		'ID' => "Indonesia",
		'IE' => "Ireland",
		'IL' => "Israel",
		'IN' => "India",
		'IO' => "British Indian Ocean Territory",
		'IQ' => "Iraq",
		'IR' => "Iran - Islamic Republic of",
		'IS' => "Iceland",
		'IT' => "Italy",
		'JM' => "Jamaica",
		'JO' => "Jordan",
		'JP' => "Japan",
		'KE' => "Kenya",
		'KG' => "Kyrgyzstan",
		'KH' => "Cambodia",
		'KI' => "Kiribati",
		'KM' => "Comoros",
		'KN' => "Saint Kitts and Nevis",
		'KP' => "Korea - Democratic People's Republic of",
		'KR' => "Korea - Republic of",
		'KW' => "Kuwait",
		'KY' => "Cayman Islands",
		'KZ' => "Kazakhstan",
		'LA' => "Lao People's Democratic Republic",
		'LB' => "Lebanon",
		'LC' => "Saint Lucia",
		'LI' => "Liechtenstein",
		'LK' => "Sri Lanka",
		'LR' => "Liberia",
		'LS' => "Lesotho",
		'LT' => "Lithuania",
		'LU' => "Luxembourg",
		'LV' => "Latvia",
		'LY' => "Libyan Arab Jamahiriya",
		'MA' => "Morocco",
		'MC' => "Monaco",
		'MD' => "Moldova - Republic of",
		'ME' => "Montenegro",
		'MG' => "Madagascar",
		'MH' => "Marshall Islands",
		'MK' => "Macedonia - the Former Yugoslav Republic of",
		'ML' => "Mali",
		'MM' => "Myanmar",
		'MN' => "Mongolia",
		'MO' => "Macao",
		'MP' => "Northern Mariana Islands",
		'MQ' => "Martinique",
		'MR' => "Mauritania",
		'MS' => "Montserrat",
		'MT' => "Malta",
		'MU' => "Mauritius",
		'MV' => "Maldives",
		'MW' => "Malawi",
		'MX' => "Mexico",
		'MY' => "Malaysia",
		'MZ' => "Mozambique",
		'NA' => "Namibia",
		'NC' => "New Caledonia",
		'NE' => "Niger",
		'NF' => "Norfolk Island",
		'NG' => "Nigeria",
		'NI' => "Nicaragua",
		'NL' => "Netherlands",
		'NO' => "Norway",
		'NP' => "Nepal",
		'NR' => "Nauru",
		'NU' => "Niue",
		'NZ' => "New Zealand",
		'OM' => "Oman",
		'PA' => "Panama",
		'PE' => "Peru",
		'PF' => "French Polynesia",
		'PG' => "Papua New Guinea",
		'PH' => "Philippines",
		'PK' => "Pakistan",
		'PL' => "Poland",
		'PM' => "Saint Pierre and Miquelon",
		'PN' => "Pitcairn",
		'PR' => "Puerto Rico",
		'PS' => "Palestinian Territory - Occupied",
		'PT' => "Portugal",
		'PW' => "Palau",
		'PY' => "Paraguay",
		'QA' => "Qatar",
		'RE' => "Reunion",
		'RO' => "Romania",
		'RS' => "Serbia",
		'RU' => "Russian Federation",
		'RW' => "Rwanda",
		'SA' => "Saudi Arabia",
		'SB' => "Solomon Islands",
		'SC' => "Seychelles",
		'SD' => "Sudan",
		'SE' => "Sweden",
		'SG' => "Singapore",
		'SH' => "Saint Helena",
		'SI' => "Slovenia",
		'SJ' => "Svalbard and Jan Mayen",
		'SK' => "Slovakia",
		'SL' => "Sierra Leone",
		'SM' => "San Marino",
		'SN' => "Senegal",
		'SO' => "Somalia",
		'SR' => "Suriname",
		'ST' => "Sao Tome and Principe",
		'SV' => "El Salvador",
		'SY' => "Syrian Arab Republic",
		'SZ' => "Swaziland",
		'TC' => "Turks and Caicos Islands",
		'TD' => "Chad",
		'TF' => "French Southern Territories",
		'TG' => "Togo",
		'TH' => "Thailand",
		'TJ' => "Tajikistan",
		'TK' => "Tokelau",
		'TL' => "East Timor",
		'TM' => "Turkmenistan",
		'TN' => "Tunisia",
		'TO' => "Tonga",
		'TR' => "Turkey",
		'TT' => "Trinidad and Tobago",
		'TV' => "Tuvalu",
		'TW' => "Taiwan",
		'TZ' => "Tanzania (United Republic of)",
		'UA' => "Ukraine",
		'UG' => "Uganda",
		'UM' => "United States Minor Outlying Islands",
		'UY' => "Uruguay",
		'UZ' => "Uzbekistan",
		'VA' => "Holy See (Vatican City State)",
		'VC' => "Saint Vincent and the Grenadines",
		'VE' => "Venezuela",
		'VG' => "Virgin Islands - British",
		'VI' => "Virgin Islands - U.S.",
		'VN' => "Vietnam",
		'VU' => "Vanuatu",
		'WF' => "Wallis and Futuna",
		'WS' => "Samoa",
		'YE' => "Yemen",
		'YT' => "Mayotte",
		'ZA' => "South Africa",
		'ZM' => "Zambia",
		'ZR' => "Zaire",
		'ZW' => "Zimbabwe"*/
    );
    
    public static function set_default_locale_code($array) {
        self::$default_locale_code = $array;
    }
    
    public static function get_default_locale_code() {
        return self::$default_locale_code;
    }
    
    public static function set_available_languages($array) {
        self::$available_languages = $array;
    }
    
    public static function get_available_languages() {
        return self::$available_languages;
    }
    
    public static function set_supported_locales($array) {
        self::$supported_locales = $array;
    }
    
    public static function get_supported_locales() {
        return self::$supported_locales;
    }
    
    public static function set_threeletter_locale_code_map($array) {
        self::$threeletter_locale_code_map = $array;
    }
    
    public static function get_threeletter_locale_code_map() {
        return self::$threeletter_locale_code_map;
    }
    
    public static function set_locale_3l2l_code_map($array) {
        self::$locale_3l2l_code_map = $array;
    }
    
    public static function get_locale_3l2l_code_map() {
        return self::$locale_3l2l_code_map;
    }
    
    public static function set_country_locale_code_map($array) {
        self::$country_locale_code_map = $array;
    }
    
    public static function get_country_locale_code_map() {
        return self::$country_locale_code_map;
    }
    
    /** 
     * Returns the country name from the appropriate code.
     * @return null|string String if country found, null if none found
     */
    static function countryCode2Locale($code) {
        $local = isset(self::$country_locale_code_map[$code]) ? self::$country_locale_code_map[$code] : null;
	return $local;
    }
    
    /**
     * return the visitors locale by countrycode
     * @return type 
     */
    public static function visitor_locale(){
        $visitor_country = parent::visitor_country();
        if(isset(self::$country_locale_code_map[$visitor_country])) return self::$country_locale_code_map[$visitor_country];
        else return self::$default_locale_code;
    }
    
    public static function visitor_locale_2letter(){
        $locale = self::visitor_locale();
        $locale = explode('_', $locale);
        return $locale[0];
    }
        
}